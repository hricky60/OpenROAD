%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 89 239 522 555
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Fri Dec 17 14:19:17 2021)
%%Title: (sky130hd_design_customrules_-40C.tcap.vs.ps)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments


% including file "/import/cadence/INNOVUS181/share/tcltools/icd8.6.4/lib/blt2.4/bltGraph.pro"

%%BeginProlog
%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
  
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It is typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
} def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  gsave
    3 copy pop
    moveto newpath
    2 div 0 360 arc
    closepath DrawSymbolProc
  grestore
} def

% Square
/Sq {
  % Stack: x y symbolSize
  gsave
    dup dup 2 div dup
    6 -1 roll exch sub exch
    5 -1 roll exch sub 4 -2 roll Box
    DrawSymbolProc
  grestore
} def

% Line
/Li {
  % Stack: x y symbolSize
  gsave
    3 1 roll exch 3 -1 roll 2 div 3 copy
    newpath
    sub exch moveto add exch lineto
    stroke
  grestore
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def

%%EndProlog

%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.719734 -0.720472 scale
0 -1100 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
125 331 translate


%%EndSetup

12 /Helvetica-Bold SetFont
40 32 557 380 Box

1 1 1 SetBgColor
Fill
gsave clip


% Element "excluded"


% Element "over"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  0 0.501961 0 SetBgColor
  Fill
  0 0.501961 0 SetFgColor
  stroke
} def

130.122 348.764 1 Ci
47.1748 406.005 1 Ci
66.6573 392.449 1 Ci
123.155 353.271 1 Ci
49.9004 404.119 1 Ci
44.601 407.86 1 Ci
88.0234 376.223 1 Ci
47.3545 405.811 1 Ci
62.997 395.025 1 Ci
67.4534 390.324 1 Ci
84.6346 377.068 1 Ci
83.087 380.49 1 Ci
104.002 363.048 1 Ci
86.183 374.396 1 Ci
49.0626 404.324 1 Ci
90.2798 374.424 1 Ci
77.8852 384.513 1 Ci
87.3228 376.51 1 Ci
50.7204 402.902 1 Ci
104.445 365.271 1 Ci
68.4846 391.47 1 Ci
130.932 348.756 1 Ci
48.6515 404.639 1 Ci
47.399 405.827 1 Ci
86.5517 373.78 1 Ci
88.9817 373.698 1 Ci
47.1748 405.842 1 Ci
54.774 400.426 1 Ci
52.5472 402.148 1 Ci
59.0372 396.853 1 Ci
101.654 367.665 1 Ci
113.583 360.676 1 Ci
101.014 369.114 1 Ci
177.968 315.971 1 Ci
100.829 365.765 1 Ci
100.488 366.303 1 Ci
74.2183 387.156 1 Ci
75.2083 386.405 1 Ci
51.0701 403.264 1 Ci
91.1474 373.085 1 Ci
44.7023 407.76 1 Ci
90.5921 372.027 1 Ci
46.8259 406.131 1 Ci
52.8223 401.586 1 Ci
99.8026 366.265 1 Ci
46.3414 406.187 1 Ci
56.7452 398.587 1 Ci
59.3218 397.436 1 Ci
135.191 345.625 1 Ci
48.742 404.642 1 Ci
141.976 339.902 1 Ci
92.2564 374.682 1 Ci
55.1706 400.338 1 Ci
48.4564 405.038 1 Ci
224.093 283.686 1 Ci
107.097 362.399 1 Ci
105.683 366.193 1 Ci

% Element "under"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  1 0 0 SetBgColor
  Fill
  1 0 0 SetFgColor
  stroke
} def

53.7327 402.405 1 Ci
56.0889 402.353 1 Ci
53.1249 402.765 1 Ci
60.7718 396.896 1 Ci
48.4976 405.465 1 Ci
46.4884 406.786 1 Ci
45.2245 408.076 1 Ci
49.5975 404.864 1 Ci
53.2092 402.731 1 Ci
43.8673 409.117 1 Ci
45.0997 408.232 1 Ci
55.6396 402.013 1 Ci
51.8779 403.197 1 Ci
48.7575 405.354 1 Ci
79.0709 385.918 1 Ci
74.0713 390.361 1 Ci
46.1565 407.56 1 Ci
148.814 362.088 1 Ci
67.4246 394.076 1 Ci
143.058 354.511 1 Ci
55.3185 402.33 1 Ci
44.7322 408.509 1 Ci
58.5042 400.095 1 Ci
53.5237 402.446 1 Ci
48.8646 405.805 1 Ci
94.4026 377.042 1 Ci
51.2826 403.641 1 Ci
54.8556 401.22 1 Ci
51.5562 403.336 1 Ci
58.8147 398.824 1 Ci
44.2638 408.174 1 Ci
42.9597 409.725 1 Ci
51.0259 404.45 1 Ci
115.013 366.014 1 Ci
134.776 347.174 1 Ci
45.4576 407.886 1 Ci
75.8256 387.806 1 Ci
45.2895 407.914 1 Ci
43.9711 408.99 1 Ci
155.417 348.757 1 Ci
46.1634 407.441 1 Ci
54.0926 402.145 1 Ci
46.2913 407.716 1 Ci
85.6649 381.711 1 Ci
83.5092 381.961 1 Ci
52.588 402.877 1 Ci
51.2489 404.745 1 Ci
51.3423 403.333 1 Ci
71.5188 390.648 1 Ci
47.0831 406.58 1 Ci
76.2117 386.45 1 Ci
141.706 348.268 1 Ci
59.1245 399.567 1 Ci
61.8492 397.012 1 Ci
50.4974 404.767 1 Ci
52.1661 403.785 1 Ci
47.2087 407.21 1 Ci
153.303 338.612 1 Ci
81.0568 383.896 1 Ci
45.838 407.1 1 Ci
77.1047 388.57 1 Ci
55.122 400.954 1 Ci
47.321 406.524 1 Ci
50.4854 404.769 1 Ci
48.2017 406.107 1 Ci
189.338 312.339 1 Ci
45.4467 407.772 1 Ci
73.5593 389.317 1 Ci
81.7318 383.909 1 Ci
51.8067 403.563 1 Ci
49.9569 404.803 1 Ci
51.8984 403.755 1 Ci
45.4087 408.263 1 Ci
153.939 358.33 1 Ci
46.011 407.735 1 Ci
114.849 365.137 1 Ci
46.8104 407.169 1 Ci
75.0774 388.676 1 Ci
43.8574 408.992 1 Ci
49.5413 404.629 1 Ci
56.2259 400.338 1 Ci
52.2494 404.044 1 Ci
52.1497 404.024 1 Ci
49.256 405.703 1 Ci
57.1089 401.169 1 Ci
111.52 365.222 1 Ci
74.3132 387.683 1 Ci
78.3567 386.015 1 Ci
49.2462 405.3 1 Ci
54.6517 402.266 1 Ci
55.2562 403.1 1 Ci
54.1573 401.767 1 Ci
126.4 353.776 1 Ci
168.485 351.595 1 Ci
57.054 401.434 1 Ci
72.6511 392.625 1 Ci
46.91 407.167 1 Ci
163.336 352.957 1 Ci
43.1036 409.54 1 Ci
50.0726 404.567 1 Ci
46.4419 407.518 1 Ci
51.897 403.788 1 Ci
44.3234 408.404 1 Ci
44.5468 408.088 1 Ci
47.5113 406.004 1 Ci
81.542 382.802 1 Ci
66.7397 394.904 1 Ci
44.2932 408.876 1 Ci
53.0586 402.842 1 Ci
43.9053 408.652 1 Ci
52.7529 403.327 1 Ci
59.838 398.284 1 Ci
87.8754 380.394 1 Ci
43.5787 409.286 1 Ci
127.24 375.039 1 Ci
45.5811 407.956 1 Ci
50.7764 404.64 1 Ci
393.139 170.534 1 Ci
44.4022 408.748 1 Ci
66.9152 393.128 1 Ci
53.6689 402.142 1 Ci
67.2188 393.298 1 Ci
50.4569 404.715 1 Ci
306.351 232.344 1 Ci
43.5273 409.148 1 Ci
66.7938 395.224 1 Ci
45.8503 407.668 1 Ci
45.6141 408.034 1 Ci
53.7782 402.599 1 Ci
153.208 359.442 1 Ci
44.479 408.566 1 Ci
48.6198 405.264 1 Ci
74.991 389.55 1 Ci
78.867 384.79 1 Ci
51.8543 403.788 1 Ci
49.1172 405.561 1 Ci
50.7855 405.084 1 Ci
52.3491 403.162 1 Ci
81.6814 383.534 1 Ci
45.7993 407.562 1 Ci
51.277 404.422 1 Ci
46.63 407.219 1 Ci
181.336 321.433 1 Ci
287.314 253.901 1 Ci
49.905 404.871 1 Ci
139.415 368.927 1 Ci
53.0378 403.641 1 Ci
45.4291 408.099 1 Ci
54.1217 401.962 1 Ci
44.7349 408.59 1 Ci
157.279 339.706 1 Ci
50.6525 404.543 1 Ci
50.7569 403.994 1 Ci
58.9298 398.476 1 Ci
45.1914 408.022 1 Ci
46.7014 406.525 1 Ci
127.643 351.425 1 Ci
44.1485 409.407 1 Ci
46.162 407.844 1 Ci
53.1939 402.668 1 Ci
64.0526 396.55 1 Ci
89.0544 377.958 1 Ci
80.1691 386.589 1 Ci
55.5331 401.032 1 Ci
47.6689 405.827 1 Ci
187.772 321.311 1 Ci
44.138 408.766 1 Ci
57.1705 400.277 1 Ci
67.697 393.48 1 Ci
46.2749 407.327 1 Ci
59.1932 398.223 1 Ci
51.4701 403.84 1 Ci
44.3417 408.88 1 Ci
52.4794 402.912 1 Ci
135.228 347.675 1 Ci
46.4492 406.821 1 Ci
51.3767 404.43 1 Ci
82.3865 384.292 1 Ci
45.8961 407.87 1 Ci
43.017 409.581 1 Ci
43.5198 409.334 1 Ci
183.155 345.618 1 Ci
45.2273 407.718 1 Ci
47.8534 406.108 1 Ci
162.144 329.773 1 Ci
106.482 372.813 1 Ci
58.8182 399.17 1 Ci
50.6451 404.379 1 Ci
54.1225 401.67 1 Ci
52.6136 402.835 1 Ci
55.8201 400.938 1 Ci
52.9335 403.129 1 Ci
56.9767 399.732 1 Ci
54.4393 401.938 1 Ci
75.8652 387.692 1 Ci
44.8456 408.106 1 Ci
123.36 356.131 1 Ci
49.0128 404.966 1 Ci
42.6999 409.527 1 Ci
48.8178 405.226 1 Ci
46.863 406.895 1 Ci
46.6922 406.482 1 Ci
65.6607 396.496 1 Ci
46.1995 408.176 1 Ci
49.0075 405.218 1 Ci
51.494 403.953 1 Ci
93.8805 380.825 1 Ci
76.404 386.61 1 Ci
72.8399 389.753 1 Ci
47.3832 406.284 1 Ci
44.2698 408.405 1 Ci
46.3494 407.732 1 Ci
53.0832 402.178 1 Ci
57.9836 399.313 1 Ci
49.9917 405.027 1 Ci
57.5404 399.327 1 Ci
77.2344 387.99 1 Ci
56.36 400.948 1 Ci
44.7392 408.482 1 Ci
136.095 350.758 1 Ci
56.5553 401.898 1 Ci
48.9721 405.023 1 Ci
61.1308 397.443 1 Ci
130.313 368.949 1 Ci
51.3848 403.512 1 Ci
55.0549 402.305 1 Ci
53.3247 402.555 1 Ci
46.8123 407.07 1 Ci
45.4793 407.822 1 Ci
126.598 356.294 1 Ci
43.7758 409.024 1 Ci
57.8122 399.594 1 Ci
50.7994 404.78 1 Ci
44.7992 408.362 1 Ci
59.0551 401.415 1 Ci
52.6752 403.167 1 Ci
108.137 369.915 1 Ci
294.711 243.13 1 Ci
50.3617 404.746 1 Ci
74.5751 388.657 1 Ci
77.3748 390.686 1 Ci
46.6981 406.787 1 Ci
96.9189 375.897 1 Ci
52.1807 403.487 1 Ci
51.4904 403.762 1 Ci
44.5897 408.418 1 Ci
46.0302 407.529 1 Ci
44.7626 408.433 1 Ci
43.8235 409.106 1 Ci
62.5307 396.599 1 Ci
44.9649 408.783 1 Ci
48.0716 406.133 1 Ci
105.522 366.357 1 Ci
49.2922 405.168 1 Ci
81.774 382.982 1 Ci
57.082 400.109 1 Ci
50.0261 405.155 1 Ci
44.3881 408.409 1 Ci
86.6054 380.275 1 Ci
44.2598 408.409 1 Ci
45.0191 408.242 1 Ci
147.647 343.47 1 Ci
52.7801 403.129 1 Ci
50.4717 404.311 1 Ci
64.8704 394.056 1 Ci
69.002 392.109 1 Ci
48.4492 406.43 1 Ci
74.0521 389.895 1 Ci
145.267 366.851 1 Ci
127.939 374.431 1 Ci
141.371 346.932 1 Ci
58.9212 398.926 1 Ci
48.499 405.47 1 Ci
62.482 397.924 1 Ci
59.9272 398.201 1 Ci
44.8099 407.9 1 Ci
149.59 342.43 1 Ci
45.7153 407.678 1 Ci
68.2074 393.196 1 Ci
596 39.4912 1 Ci
48.2401 406.233 1 Ci
49.7148 405.412 1 Ci
169.779 327.955 1 Ci
47.3796 406.849 1 Ci
43.9568 408.896 1 Ci
122.275 360.504 1 Ci
68.2469 393.445 1 Ci
51.9663 403.968 1 Ci
51.5613 404.445 1 Ci
56.8645 401.284 1 Ci
55.3833 400.941 1 Ci
91.3572 377.099 1 Ci
44.7399 408.334 1 Ci
64.6402 395.581 1 Ci
50.4881 404.779 1 Ci
63.9727 400.362 1 Ci
53.5879 403.609 1 Ci
48.6334 405.567 1 Ci
48.5502 406.099 1 Ci
159.159 360.136 1 Ci
52.4597 404.386 1 Ci
48.5836 405.629 1 Ci
110.1 369.935 1 Ci
42.9313 409.656 1 Ci
52.9394 402.823 1 Ci
78.135 387.562 1 Ci
45.158 408.146 1 Ci
44.5559 408.688 1 Ci
47.1489 406.51 1 Ci
50.1188 404.888 1 Ci
53.6114 402.469 1 Ci
52.9247 402.818 1 Ci
89.4187 379.238 1 Ci
59.8838 398.064 1 Ci

% Element "unity_line"

0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
 newpath 40 411 moveto
 596 32 lineto
DashesProc stroke

% Marker "annotations_box" is a PolygonMarker marker
newpath 457 35.79 moveto
590.44 35.79 lineto
590.44 183.6 lineto
457 183.6 lineto
457 35.79 lineto
closepath
1 1 1 SetFgColor
Fill
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
457 183.6 moveto
 457 35.79 lineto
DashesProc stroke
457 35.79 moveto
 590.44 35.79 lineto
DashesProc stroke
590.44 35.79 moveto
 590.44 183.6 lineto
DashesProc stroke
590.44 183.6 moveto
 457 183.6 lineto
DashesProc stroke

% Marker "marker1" is a TextMarker marker
106 20 0 514.633 44.7076 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(VS Statistics:) 98 4 11 DrawAdjText
EndText

% Marker "marker2" is a TextMarker marker
78 20 0 500.633 58.0841 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(Appl Scale) 70 4 11 DrawAdjText
EndText

% Marker "marker3" is a TextMarker marker
134 20 0 528.633 67.0018 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(    Factor: 1.0000) 126 4 11 DrawAdjText
EndText

% Marker "marker4" is a TextMarker marker
78 20 0 500.633 84.8371 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
( Rec Scale) 70 4 11 DrawAdjText
EndText

% Marker "marker5" is a TextMarker marker
134 20 0 528.633 93.7547 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(    Factor: 1.0874) 126 4 11 DrawAdjText
EndText

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 600 32 Box fill

0 32 40 379 Box fill

596 32 4 379 Box fill

0 411 600 26 Box fill

200 18 0 318 15 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(openrcx vs invs tcap) 200 0 11 DrawAdjText
EndText
10 11 0 40 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0) 6 2 8 DrawAdjText
EndText
25 11 0 291.023 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.05) 21 2 8 DrawAdjText
EndText
19 11 0 542.045 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.1) 15 2 8 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
40 413 moveto
 596 413 lineto
DashesProc stroke
165.511 413 moveto
 165.511 418 lineto
DashesProc stroke
40 413 moveto
 40 421 lineto
DashesProc stroke
416.534 413 moveto
 416.534 418 lineto
DashesProc stroke
291.023 413 moveto
 291.023 421 lineto
DashesProc stroke
542.045 413 moveto
 542.045 421 lineto
DashesProc stroke
10 11 0 23 411 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0) 6 2 8 DrawAdjText
EndText
25 11 0 15.5 239.889 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.05) 21 2 8 DrawAdjText
EndText
19 11 0 18.5 68.7785 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.1) 15 2 8 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
38 411 moveto
 38 32 lineto
DashesProc stroke
38 325.445 moveto
 33 325.445 lineto
DashesProc stroke
38 411 moveto
 30 411 lineto
DashesProc stroke
38 154.334 moveto
 33 154.334 lineto
DashesProc stroke
38 239.889 moveto
 30 239.889 lineto
DashesProc stroke
38 68.7785 moveto
 30 68.7785 lineto
DashesProc stroke
showpage
%Trailer
grestore
end
%EOF
