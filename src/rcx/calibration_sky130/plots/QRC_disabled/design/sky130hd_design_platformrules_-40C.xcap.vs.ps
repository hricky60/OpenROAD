%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 89 239 522 555
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Fri Dec 17 14:19:18 2021)
%%Title: (sky130hd_design_platformrules_-40C.xcap.vs.ps)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments


% including file "/import/cadence/INNOVUS181/share/tcltools/icd8.6.4/lib/blt2.4/bltGraph.pro"

%%BeginProlog
%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
  
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It is typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
} def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  gsave
    3 copy pop
    moveto newpath
    2 div 0 360 arc
    closepath DrawSymbolProc
  grestore
} def

% Square
/Sq {
  % Stack: x y symbolSize
  gsave
    dup dup 2 div dup
    6 -1 roll exch sub exch
    5 -1 roll exch sub 4 -2 roll Box
    DrawSymbolProc
  grestore
} def

% Line
/Li {
  % Stack: x y symbolSize
  gsave
    3 1 roll exch 3 -1 roll 2 div 3 copy
    newpath
    sub exch moveto add exch lineto
    stroke
  grestore
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def

%%EndProlog

%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.719734 -0.720472 scale
0 -1100 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
125 331 translate


%%EndSetup

12 /Helvetica-Bold SetFont
46 32 551 380 Box

1 1 1 SetBgColor
Fill
gsave clip


% Element "excluded"


% Element "over"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  0 0.501961 0 SetBgColor
  Fill
  0 0.501961 0 SetFgColor
  stroke
} def

88.5774 378.066 1 Ci
71.0007 391.739 1 Ci
64.4791 397.695 1 Ci
72.2695 391.987 1 Ci
72.1477 392.34 1 Ci
68.1485 394.299 1 Ci
70.2094 392.697 1 Ci
74.2851 351.464 1 Ci
73.8379 388.881 1 Ci
69.179 391.879 1 Ci
70.2094 392.604 1 Ci
69.179 391.515 1 Ci
119.921 320.19 1 Ci
67.1189 393.982 1 Ci
67.3652 394.612 1 Ci
169.537 325.167 1 Ci
70.2094 392.73 1 Ci
68.5281 393.664 1 Ci
63.8079 397.535 1 Ci
68.1485 394.12 1 Ci
68.1485 393.366 1 Ci
63.983 398.277 1 Ci
68.1485 392.241 1 Ci

% Element "under"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  1 0 0 SetBgColor
  Fill
  1 0 0 SetFgColor
  stroke
} def

71.6409 402.325 1 Ci
65.4456 398.883 1 Ci
69.3701 397.163 1 Ci
74.7447 401.483 1 Ci
71.0007 396.767 1 Ci
97.3307 391.981 1 Ci
144.407 373.597 1 Ci
75.7717 400.208 1 Ci
70.6389 402.934 1 Ci
98.7799 379.744 1 Ci
68.962 407.994 1 Ci
74.7447 401.161 1 Ci
92.02 386.424 1 Ci
65.4456 399.905 1 Ci
64.6001 400.812 1 Ci
165.089 366.164 1 Ci
100.34 407.558 1 Ci
74.7456 399.981 1 Ci
130.182 381.412 1 Ci
111.704 386.834 1 Ci
99.9517 384.572 1 Ci
90.1636 394.674 1 Ci
70.3072 402.06 1 Ci
64.4791 402.161 1 Ci
64.4791 401.047 1 Ci
124.022 383.585 1 Ci
82.9583 398.8 1 Ci
68.585 403.312 1 Ci
107.113 375.963 1 Ci
78.6017 400.242 1 Ci
86.7023 391.081 1 Ci
80.9045 398.833 1 Ci
83.9852 396.908 1 Ci
98.7799 380.71 1 Ci
82.3546 396.963 1 Ci
63.8079 404.731 1 Ci
91.171 395.533 1 Ci
108.02 379.757 1 Ci
72.0534 401.567 1 Ci
108.497 411 1 Ci
151.56 351.038 1 Ci
66.7686 411 1 Ci
79.3343 392.437 1 Ci
77.3756 399.72 1 Ci
189.726 361.635 1 Ci
82.496 396.848 1 Ci
65.4456 399.905 1 Ci
77.7882 411 1 Ci
84.1657 389.919 1 Ci
133.34 368.913 1 Ci
72.6918 400.159 1 Ci
70.6389 402.364 1 Ci
107.113 376.229 1 Ci
66.308 403.732 1 Ci
68.9896 402.807 1 Ci
64.729 404.184 1 Ci
74.2255 400.289 1 Ci
189.475 360.059 1 Ci
116.897 378.686 1 Ci
65.4456 400.231 1 Ci
118.226 371.217 1 Ci
71.0007 396.863 1 Ci
65.4456 399.443 1 Ci
64.4791 404.408 1 Ci
90.6882 391.034 1 Ci
73.7792 394.346 1 Ci
90.4463 386.034 1 Ci
74.7447 400.754 1 Ci
65.4456 398.788 1 Ci
70.6389 401.486 1 Ci
82.1128 386.534 1 Ci
68.7059 400.591 1 Ci
67.1616 401.307 1 Ci
73.3853 396.466 1 Ci
134.893 358.972 1 Ci
157.163 372.16 1 Ci
217.694 332.33 1 Ci
78.6977 394.832 1 Ci
75.4694 399.139 1 Ci
79.2472 391.285 1 Ci
78.8515 399.51 1 Ci
98.4652 387.35 1 Ci
72.1192 396.121 1 Ci
105.543 391.226 1 Ci
76.0135 391.52 1 Ci
269.872 320.234 1 Ci
101.557 378.491 1 Ci
269.697 325.216 1 Ci
95.0955 392.151 1 Ci
95.2777 394.043 1 Ci
70.6389 402.143 1 Ci
73.1915 400.495 1 Ci
87.9399 387.11 1 Ci
76.6385 411 1 Ci
73.7792 394.805 1 Ci
74.7447 400.951 1 Ci
72.1948 399.943 1 Ci
70.6389 402.257 1 Ci
74.7447 398.641 1 Ci
64.4791 404.334 1 Ci
76.6501 400.826 1 Ci
76.7986 400.411 1 Ci
70.6389 402.033 1 Ci
71.0007 396.28 1 Ci
66.2005 399.491 1 Ci
88.4005 396.304 1 Ci
89.6568 388.831 1 Ci
68.2232 397.756 1 Ci
72.6918 401.459 1 Ci
69.4306 399.009 1 Ci
101.557 380.093 1 Ci
70.6389 400.794 1 Ci
87.0642 396.567 1 Ci
76.5567 393.704 1 Ci
64.4791 404.298 1 Ci
78.6924 396.748 1 Ci
79.8171 394.331 1 Ci
85.0112 397.116 1 Ci
64.7939 404.569 1 Ci
97.785 379.337 1 Ci
76.5274 398.221 1 Ci
73.0768 396.507 1 Ci
121.846 372.408 1 Ci
77.3756 397.611 1 Ci
70.3917 402.284 1 Ci
64.0568 398.826 1 Ci
64.3565 399.928 1 Ci
88.2725 387.906 1 Ci
82.9583 397.336 1 Ci
74.7447 399.833 1 Ci
107.596 388.635 1 Ci
67.5119 401.282 1 Ci
91.171 395.407 1 Ci
138.395 378.15 1 Ci
64.4791 404.523 1 Ci
65.5043 398.651 1 Ci
78.8515 399.602 1 Ci
68.585 402.765 1 Ci
70.6389 402.366 1 Ci
70.6389 402.366 1 Ci
73.7792 395.347 1 Ci
78.8515 399.473 1 Ci
93.2239 394.028 1 Ci
68.8962 402.443 1 Ci
109.65 388.713 1 Ci
65.9888 401.227 1 Ci
83.61 397.161 1 Ci
68.2232 398.34 1 Ci
101.558 378.847 1 Ci
139.844 373.423 1 Ci
73.7792 395.223 1 Ci
72.6918 401.271 1 Ci
94.3362 393.051 1 Ci
109.288 380.496 1 Ci
72.6918 401.695 1 Ci
87.6679 386.75 1 Ci
96.606 381.252 1 Ci
69.6751 397.769 1 Ci
95.1106 394.272 1 Ci
86.8232 389.552 1 Ci
77.3765 398.999 1 Ci
95.2777 395.222 1 Ci
110.978 382.342 1 Ci
221.972 347.15 1 Ci
71.5573 411 1 Ci
82.1119 388.658 1 Ci
72.6918 401.643 1 Ci
66.8344 400.149 1 Ci
96.0015 382.404 1 Ci
65.5043 404.206 1 Ci
137.369 378.715 1 Ci
94.5904 384.111 1 Ci
66.5321 403.827 1 Ci
91.0794 394.726 1 Ci
158.928 372.44 1 Ci
65.2562 404.976 1 Ci
96.9457 393.724 1 Ci
65.4456 399.967 1 Ci
73.7792 394.76 1 Ci
66.3516 403.368 1 Ci
167.894 363.061 1 Ci
63.783 399.992 1 Ci
74.7447 400.937 1 Ci
74.7447 401.034 1 Ci
65.4456 398.252 1 Ci
72.6918 397.657 1 Ci
101.558 378.06 1 Ci
87.5523 392.629 1 Ci
70.6389 402.898 1 Ci
78.8515 399.372 1 Ci
68.2232 398.204 1 Ci
79.072 398.747 1 Ci
95.2777 394.526 1 Ci
75.0257 398.321 1 Ci
68.585 403.14 1 Ci
72.7283 395.924 1 Ci
100.264 383.596 1 Ci
82.9583 398.201 1 Ci
70.6389 402.43 1 Ci
67.7706 396.23 1 Ci
76.3718 390.889 1 Ci
68.2232 397.506 1 Ci
78.8515 399.121 1 Ci
73.4573 398.274 1 Ci
74.4078 398.195 1 Ci
99.3836 391.602 1 Ci
64.4791 404.374 1 Ci
65.0802 403.413 1 Ci
76.5567 393.031 1 Ci
64.6347 407.862 1 Ci
131.914 382.699 1 Ci
68.2232 398.602 1 Ci
96.0015 382.248 1 Ci
97.6925 391.637 1 Ci
65.4456 399.117 1 Ci
85.6514 390.628 1 Ci
82.9583 397.802 1 Ci
68.2232 397.047 1 Ci
79.5761 396.981 1 Ci

% Element "unity_line"

0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
 newpath 46 411 moveto
 596 32 lineto
DashesProc stroke

% Marker "annotations_box" is a PolygonMarker marker
newpath 458.5 35.79 moveto
590.5 35.79 lineto
590.5 183.6 lineto
458.5 183.6 lineto
458.5 35.79 lineto
closepath
1 1 1 SetFgColor
Fill
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
458.5 183.6 moveto
 458.5 35.79 lineto
DashesProc stroke
458.5 35.79 moveto
 590.5 35.79 lineto
DashesProc stroke
590.5 35.79 moveto
 590.5 183.6 lineto
DashesProc stroke
590.5 183.6 moveto
 458.5 183.6 lineto
DashesProc stroke

% Marker "marker1" is a TextMarker marker
106 20 0 516.083 44.7076 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(VS Statistics:) 98 4 11 DrawAdjText
EndText

% Marker "marker2" is a TextMarker marker
78 20 0 502.083 58.0841 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(Appl Scale) 70 4 11 DrawAdjText
EndText

% Marker "marker3" is a TextMarker marker
134 20 0 530.083 67.0018 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(    Factor: 1.0000) 126 4 11 DrawAdjText
EndText

% Marker "marker4" is a TextMarker marker
78 20 0 502.083 84.8371 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
( Rec Scale) 70 4 11 DrawAdjText
EndText

% Marker "marker5" is a TextMarker marker
134 20 0 530.083 93.7547 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(    Factor: 1.4914) 126 4 11 DrawAdjText
EndText

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 600 32 Box fill

0 32 46 379 Box fill

596 32 4 379 Box fill

0 411 600 26 Box fill

200 18 0 321 15 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(openrcx vs invs xcap) 200 0 11 DrawAdjText
EndText
10 11 0 46 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0) 6 2 8 DrawAdjText
EndText
31 11 0 268.276 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.005) 27 2 8 DrawAdjText
EndText
25 11 0 490.552 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.01) 21 2 8 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
46 413 moveto
 596 413 lineto
DashesProc stroke
157.138 413 moveto
 157.138 418 lineto
DashesProc stroke
46 413 moveto
 46 421 lineto
DashesProc stroke
379.414 413 moveto
 379.414 418 lineto
DashesProc stroke
268.276 413 moveto
 268.276 421 lineto
DashesProc stroke
490.552 413 moveto
 490.552 421 lineto
DashesProc stroke
10 11 0 29 411 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0) 6 2 8 DrawAdjText
EndText
31 11 0 18.5 257.832 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.005) 27 2 8 DrawAdjText
EndText
25 11 0 21.5 104.663 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.01) 21 2 8 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
44 411 moveto
 44 32 lineto
DashesProc stroke
44 334.416 moveto
 39 334.416 lineto
DashesProc stroke
44 411 moveto
 36 411 lineto
DashesProc stroke
44 181.247 moveto
 39 181.247 lineto
DashesProc stroke
44 257.832 moveto
 36 257.832 lineto
DashesProc stroke
44 104.663 moveto
 36 104.663 lineto
DashesProc stroke
showpage
%Trailer
grestore
end
%EOF
