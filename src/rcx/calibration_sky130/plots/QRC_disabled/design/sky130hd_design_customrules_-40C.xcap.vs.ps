%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 89 239 522 555
%%Pages: 0
%%Creator: (BLT 2.4 Graph)
%%CreationDate: (Fri Dec 17 14:19:17 2021)
%%Title: (sky130hd_design_customrules_-40C.xcap.vs.ps)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments


% including file "/import/cadence/INNOVUS181/share/tcltools/icd8.6.4/lib/blt2.4/bltGraph.pro"

%%BeginProlog
%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
  
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It is typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
  exch 4 2 roll moveto
  dup 0 rlineto
  exch 0 exch rlineto
  neg 0 rlineto
  closepath
} def

/SetFgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 0 0 0 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

/SetBgColor {
  % Stack: red green blue
  CL 0 eq { 
    pop pop pop 1 1 1 
  } if
  setrgbcolor
  CL 1 eq { 
    currentgray setgray 
  } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 4 2 roll moveto lineto stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
} def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath neg 0 moveto 0 lineto
    DrawSymbolProc
    newpath neg 0 exch moveto 0 exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
    2 copy exch neg exch neg moveto dup neg dup lineto
    2 copy neg exch neg lineto 2 copy exch neg lineto
    dup dup neg lineto 2 copy neg lineto 2 copy lineto
    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
    dup dup neg exch lineto exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  gsave
    3 copy pop
    moveto newpath
    2 div 0 360 arc
    closepath DrawSymbolProc
  grestore
} def

% Square
/Sq {
  % Stack: x y symbolSize
  gsave
    dup dup 2 div dup
    6 -1 roll exch sub exch
    5 -1 roll exch sub 4 -2 roll Box
    DrawSymbolProc
  grestore
} def

% Line
/Li {
  % Stack: x y symbolSize
  gsave
    3 1 roll exch 3 -1 roll 2 div 3 copy
    newpath
    sub exch moveto add exch lineto
    stroke
  grestore
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def

%%EndProlog

%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

/CL 0 def				% Set color level mode
0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
0.719734 -0.720472 scale
0 -1100 translate

% User defined page layout

% Set color level
/CL 2 def

% Set origin
125 331 translate


%%EndSetup

12 /Helvetica-Bold SetFont
46 32 551 380 Box

1 1 1 SetBgColor
Fill
gsave clip


% Element "excluded"


% Element "over"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  0 0.501961 0 SetBgColor
  Fill
  0 0.501961 0 SetFgColor
  stroke
} def

71.6409 392.636 1 Ci
65.4456 396.768 1 Ci
69.3701 394.461 1 Ci
144.407 342.17 1 Ci
98.7799 374.554 1 Ci
64.6001 395.797 1 Ci
88.5774 369.256 1 Ci
74.7456 389.658 1 Ci
111.704 365.367 1 Ci
99.9517 368.739 1 Ci
90.1636 377.991 1 Ci
64.4791 393.75 1 Ci
64.4791 395.054 1 Ci
86.7023 382.425 1 Ci
71.0007 389.734 1 Ci
63.8079 396.008 1 Ci
108.02 366.805 1 Ci
72.0534 392.331 1 Ci
77.3756 385.654 1 Ci
133.34 349.427 1 Ci
64.4791 389.255 1 Ci
72.1477 388.565 1 Ci
72.6918 389.507 1 Ci
66.308 395.95 1 Ci
64.729 396.947 1 Ci
74.2255 387.74 1 Ci
65.4456 397.415 1 Ci
90.6882 379.772 1 Ci
73.7792 391.672 1 Ci
65.4456 397.415 1 Ci
70.6389 393.439 1 Ci
82.1128 383.894 1 Ci
74.2851 338.344 1 Ci
68.7059 394.502 1 Ci
67.1616 394.672 1 Ci
73.3853 390.581 1 Ci
73.8379 383.522 1 Ci
217.694 286.632 1 Ci
69.179 394.043 1 Ci
75.4694 389.872 1 Ci
79.2472 381.684 1 Ci
78.8515 387.784 1 Ci
98.4652 374.564 1 Ci
76.0135 383.162 1 Ci
269.872 244.885 1 Ci
269.697 250.811 1 Ci
70.6389 393.439 1 Ci
119.921 285.181 1 Ci
73.1915 389.518 1 Ci
72.1948 388.665 1 Ci
74.7447 386.579 1 Ci
76.7986 389.194 1 Ci
70.6389 393.439 1 Ci
88.4005 377.485 1 Ci
89.6568 379.419 1 Ci
69.4306 394.179 1 Ci
70.6389 392.086 1 Ci
64.4791 397.722 1 Ci
78.6924 384.075 1 Ci
79.8171 382.604 1 Ci
64.7939 397.688 1 Ci
97.785 375.106 1 Ci
76.5274 385.853 1 Ci
73.0768 390.64 1 Ci
77.3756 385.957 1 Ci
70.3917 394.035 1 Ci
63.8079 388.9 1 Ci
64.0568 397.202 1 Ci
64.3565 396.619 1 Ci
88.2725 381.689 1 Ci
74.7447 389.444 1 Ci
67.5119 395.915 1 Ci
65.5043 395.066 1 Ci
78.8515 388.086 1 Ci
68.8962 392.681 1 Ci
65.9888 396.945 1 Ci
83.61 383.722 1 Ci
139.844 341.923 1 Ci
72.6918 392.024 1 Ci
94.3362 373.272 1 Ci
109.288 363.286 1 Ci
72.6918 392.335 1 Ci
86.8232 382.555 1 Ci
77.3765 386.052 1 Ci
82.1119 384.524 1 Ci
72.6918 392.024 1 Ci
66.8344 393.318 1 Ci
65.5043 394.407 1 Ci
94.5904 375.131 1 Ci
91.0794 376.114 1 Ci
66.3516 394.845 1 Ci
167.894 317.323 1 Ci
63.783 397.532 1 Ci
63.983 395.729 1 Ci
65.4456 395.849 1 Ci
72.6918 389.186 1 Ci
87.5523 379.241 1 Ci
79.072 383.004 1 Ci
72.7283 389.711 1 Ci
100.264 358.626 1 Ci
67.7706 394.076 1 Ci
68.2232 395.211 1 Ci
78.8515 387.78 1 Ci
73.4573 390.901 1 Ci
74.4078 390.949 1 Ci
65.0802 395.948 1 Ci
97.6925 374.705 1 Ci
65.4456 397.018 1 Ci
85.6514 382.992 1 Ci
68.2232 394.941 1 Ci
79.5761 387.492 1 Ci

% Element "under"

1 setlinewidth
[ ] 0 setdash

/DrawSymbolProc {
  1 0 0 SetBgColor
  Fill
  1 0 0 SetFgColor
  stroke
} def

74.7447 391.223 1 Ci
71.0007 395.429 1 Ci
97.3307 376.113 1 Ci
75.7717 390.734 1 Ci
70.6389 394.06 1 Ci
68.962 408.614 1 Ci
74.7447 392.357 1 Ci
92.02 383.605 1 Ci
65.4456 398.776 1 Ci
165.089 331.709 1 Ci
100.34 407.143 1 Ci
130.182 355.19 1 Ci
70.3072 394.932 1 Ci
124.022 358.537 1 Ci
82.9583 387.272 1 Ci
68.585 396.081 1 Ci
107.113 370.783 1 Ci
78.6017 389.153 1 Ci
80.9045 388.505 1 Ci
83.9852 385.541 1 Ci
98.7799 376.044 1 Ci
82.3546 386.89 1 Ci
91.171 381.431 1 Ci
108.497 411 1 Ci
151.56 344.021 1 Ci
79.3343 390.407 1 Ci
66.7686 411 1 Ci
189.726 317.511 1 Ci
82.496 391.271 1 Ci
65.4456 398.776 1 Ci
77.7882 411 1 Ci
84.1657 386.097 1 Ci
72.2695 395.817 1 Ci
70.6389 395.28 1 Ci
107.113 371.107 1 Ci
68.9896 395.464 1 Ci
68.1485 398.813 1 Ci
189.475 316.291 1 Ci
116.897 362.714 1 Ci
65.4456 398.774 1 Ci
118.226 366.977 1 Ci
71.0007 395.428 1 Ci
64.4791 398.611 1 Ci
90.4463 383.204 1 Ci
70.2094 397.597 1 Ci
74.7447 393.274 1 Ci
134.893 350.763 1 Ci
69.179 397.911 1 Ci
157.163 334.907 1 Ci
70.2094 397.202 1 Ci
78.6977 389.756 1 Ci
72.1192 393.503 1 Ci
105.543 372.607 1 Ci
101.557 373.409 1 Ci
95.0955 378.435 1 Ci
95.2777 377.991 1 Ci
67.1189 399.284 1 Ci
87.9399 385.223 1 Ci
76.6385 411 1 Ci
67.3652 399.284 1 Ci
73.7792 392.551 1 Ci
74.7447 392.665 1 Ci
70.6389 395.49 1 Ci
64.4791 398.596 1 Ci
76.6501 390.92 1 Ci
169.537 336.676 1 Ci
71.0007 394.195 1 Ci
66.2005 398.322 1 Ci
68.2232 396.066 1 Ci
72.6918 392.944 1 Ci
70.2094 397.597 1 Ci
101.557 376.507 1 Ci
68.5281 398.474 1 Ci
87.0642 384.564 1 Ci
76.5567 391.117 1 Ci
85.0112 385.579 1 Ci
121.846 360.362 1 Ci
82.9583 385.721 1 Ci
107.596 370.334 1 Ci
91.171 380.222 1 Ci
138.395 349.228 1 Ci
64.4791 398.608 1 Ci
68.585 395.767 1 Ci
70.6389 394.57 1 Ci
70.6389 394.57 1 Ci
73.7792 393.755 1 Ci
78.8515 390.441 1 Ci
93.2239 379.317 1 Ci
109.65 369.618 1 Ci
68.2232 396.138 1 Ci
101.558 373.223 1 Ci
73.7792 393.116 1 Ci
68.1485 398.586 1 Ci
87.6679 383.547 1 Ci
96.606 376.151 1 Ci
69.6751 395.661 1 Ci
95.1106 379.623 1 Ci
95.2777 380.222 1 Ci
110.978 368.961 1 Ci
221.972 295.24 1 Ci
71.5573 411 1 Ci
96.0015 378.2 1 Ci
68.1485 398.61 1 Ci
137.369 348.447 1 Ci
66.5321 396.89 1 Ci
158.928 336.581 1 Ci
65.2562 397.937 1 Ci
96.9457 377.987 1 Ci
65.4456 398.053 1 Ci
73.7792 391.913 1 Ci
74.7447 391.226 1 Ci
74.7447 392.665 1 Ci
101.558 372.725 1 Ci
70.6389 395.213 1 Ci
78.8515 389.617 1 Ci
68.2232 396.369 1 Ci
95.2777 378.605 1 Ci
75.0257 391.997 1 Ci
68.585 396.21 1 Ci
68.1485 398.789 1 Ci
82.9583 387.308 1 Ci
70.6389 394.603 1 Ci
76.3718 393.086 1 Ci
99.3836 375.061 1 Ci
64.4791 399.114 1 Ci
76.5567 390.692 1 Ci
64.6347 406.302 1 Ci
131.914 365.316 1 Ci
68.2232 397.356 1 Ci
96.0015 377.135 1 Ci
82.9583 387.39 1 Ci

% Element "unity_line"

0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
 newpath 46 411 moveto
 596 32 lineto
DashesProc stroke

% Marker "annotations_box" is a PolygonMarker marker
newpath 458.5 35.79 moveto
590.5 35.79 lineto
590.5 183.6 lineto
458.5 183.6 lineto
458.5 35.79 lineto
closepath
1 1 1 SetFgColor
Fill
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
458.5 183.6 moveto
 458.5 35.79 lineto
DashesProc stroke
458.5 35.79 moveto
 590.5 35.79 lineto
DashesProc stroke
590.5 35.79 moveto
 590.5 183.6 lineto
DashesProc stroke
590.5 183.6 moveto
 458.5 183.6 lineto
DashesProc stroke

% Marker "marker1" is a TextMarker marker
106 20 0 516.083 44.7076 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(VS Statistics:) 98 4 11 DrawAdjText
EndText

% Marker "marker2" is a TextMarker marker
78 20 0 502.083 58.0841 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(Appl Scale) 70 4 11 DrawAdjText
EndText

% Marker "marker3" is a TextMarker marker
134 20 0 530.083 67.0018 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(    Factor: 1.0000) 126 4 11 DrawAdjText
EndText

% Marker "marker4" is a TextMarker marker
78 20 0 502.083 84.8371 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
( Rec Scale) 70 4 11 DrawAdjText
EndText

% Marker "marker5" is a TextMarker marker
134 20 0 530.083 93.7547 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(    Factor: 1.0044) 126 4 11 DrawAdjText
EndText

% Unset clipping
grestore

1 1 1 SetBgColor
0 0 600 32 Box fill

0 32 46 379 Box fill

596 32 4 379 Box fill

0 411 600 26 Box fill

200 18 0 321 15 BeginText
12 /Helvetica-Bold SetFont
0 0 0 SetFgColor
(openrcx vs invs xcap) 200 0 11 DrawAdjText
EndText
10 11 0 46 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0) 6 2 8 DrawAdjText
EndText
31 11 0 268.276 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.005) 27 2 8 DrawAdjText
EndText
25 11 0 490.552 428.5 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.01) 21 2 8 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
46 413 moveto
 596 413 lineto
DashesProc stroke
157.138 413 moveto
 157.138 418 lineto
DashesProc stroke
46 413 moveto
 46 421 lineto
DashesProc stroke
379.414 413 moveto
 379.414 418 lineto
DashesProc stroke
268.276 413 moveto
 268.276 421 lineto
DashesProc stroke
490.552 413 moveto
 490.552 421 lineto
DashesProc stroke
10 11 0 29 411 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0) 6 2 8 DrawAdjText
EndText
31 11 0 18.5 257.832 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.005) 27 2 8 DrawAdjText
EndText
25 11 0 21.5 104.663 BeginText
10 /Helvetica SetFont
0 0 0 SetFgColor
(0.01) 21 2 8 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 SetFgColor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
44 411 moveto
 44 32 lineto
DashesProc stroke
44 334.416 moveto
 39 334.416 lineto
DashesProc stroke
44 411 moveto
 36 411 lineto
DashesProc stroke
44 181.247 moveto
 39 181.247 lineto
DashesProc stroke
44 257.832 moveto
 36 257.832 lineto
DashesProc stroke
44 104.663 moveto
 36 104.663 lineto
DashesProc stroke
showpage
%Trailer
grestore
end
%EOF
